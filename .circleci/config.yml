version: 2.0

jobs:
  lint:
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - run: echo "Lint wasn't setup"
  test:
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - run: ./gradlew test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  uiTest:
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - run:
          name: Show list of system-images
          command: sdkmanager --list --verbose | grep system-images
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-28;google_apis;x86_64" && echo "no" | avdmanager create avd -n test -k "system-images;android-28;google_apis;x86_64"
      - run: emulator -list-avds
      - run:
          name: Launch Emulator
          command: |
            cd ${ANDROID_HOME}/emulator;ls
            export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
            emulator -avd test -no-window -noaudio -no-boot-anim -no-window -accel on
          background: true
      - run:
          name: Wait emulator to start
          command:
            adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
      - run: ./gradlew connectedAndroidTest
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/androidTest-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  build:
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - run: ./gradlew assembleRelease
      - store_artifacts:
          path: build/libs
          destination: libs

workflows:
  version: 2
  test:
    jobs:
      - uiTest

  deploy:
    jobs:
      - lint:
          type: approval
      - test:
          requires:
            - lint
      - build:
          requires:
            - test
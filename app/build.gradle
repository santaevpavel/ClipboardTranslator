apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-kapt'

android {
    def API_KEY = System.getenv('YANDEX_TRANSLATE_API_KEY')
    def isMockApiService = false

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.santaev.myclipboard"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 17
        versionName "2.3"
        testInstrumentationRunner "ru.santaev.clipboardtranslator.MockTestRunner"

        buildConfigField "String", "YANDEX_TRANSLATE_API_KEY", "\"" + API_KEY + "\""
        buildConfigField "boolean", "MOCK", "false"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    flavorDimensions "api"

    productFlavors {
        real {
            isMockApiService = false
            buildConfigField "boolean", "MOCK", "false"
            dimension "api"
        }
        mock {
            isMockApiService = true
            buildConfigField "boolean", "MOCK", "true"
            dimension "api"
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion
    implementation 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion
    implementation 'android.arch.persistence.room:rxjava2:' + rootProject.archRoomVersion
    annotationProcessor "android.arch.lifecycle:compiler:" + rootProject.archLifecycleVersion
    annotationProcessor "android.arch.persistence.room:compiler:" + rootProject.archRoomVersion
    kapt "android.arch.lifecycle:compiler:" + rootProject.archLifecycleVersion
    kapt "android.arch.persistence.room:compiler:" + rootProject.archRoomVersion
    androidTestImplementation 'com.android.support:support-annotations:' + rootProject.supportLibVersion
    androidTestImplementation 'com.android.support.test:runner:' + rootProject.runnerVersion
    androidTestImplementation 'com.android.support.test:rules:' + rootProject.rulesVersion
    implementation 'com.android.support:appcompat-v7:' + rootProject.supportLibVersion
    implementation 'com.android.support:support-v4:' + rootProject.supportLibVersion
    implementation 'com.android.support:cardview-v7:' + rootProject.supportLibVersion
    implementation 'com.android.support:design:' + rootProject.supportLibVersion
    implementation 'com.android.support:recyclerview-v7:' + rootProject.supportLibVersion
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    implementation 'com.google.firebase:firebase-core:17.0.1'
    implementation 'com.google.firebase:firebase-crash:16.2.1'
    androidTestImplementation('android.arch.core:core-testing:' + rootProject.archLifecycleVersion) {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    }
    kapt 'com.google.dagger:dagger-android-processor:2.21'
    kapt 'com.google.dagger:dagger-compiler:2.21'
    implementation 'com.google.dagger:dagger:2.21'
    implementation 'com.google.dagger:dagger-android:2.21'
    implementation 'com.google.dagger:dagger-android-support:2.11'
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation project(':domain')
}

apply plugin: 'com.google.gms.google-services'

